module HyperDuino Output
author MicroBlocks
version 1 6 
depends Touch 
choices hyperduino_motor A B 
description 'Support for HyperDuino (https://hyperduino.com).'

  spec 'r' 'hyperduino_pinTouched' 'is HyperDuino pin _ touched?' 'menu.range:2-13' 2
  space
  spec 'r' 'hyperduino_touchEvent' 'pin touch event'
  spec 'r' 'hyperduino_last_touched_pin' 'last touched pin'
  space
  spec 'r' 'hyperduino_releaseEvent' 'pin release event'
  spec 'r' 'hyperduino_last_released_pin' 'last released pin'
  space
  spec ' ' 'hyperduino_setAllPins' 'set all HyperDuino LEDs _' 'bool' false
  spec 'r' 'hyperduino_allPins' 'HyperDuino pins'
  space
  spec ' ' 'hyperduino_setMotorHyperduino' 'set motor _ power _' 'menu.hyperduino_motor num' 'A' 100
  spec ' ' 'hyperduino_stopMotors' 'stop all motors'

to hyperduino_allPins {
  return ('[data:range]' 2 13)
}

to hyperduino_last_released_pin {
  local 'pin' (touch_last_released_pin)
  if (pin < 0) {
    return -1
  }
  return (14 - pin)
}

to hyperduino_last_touched_pin {
  local 'pin' (touch_last_touched_pin)
  if (pin < 0) {
    return -1
  }
  return (14 - pin)
}

to hyperduino_pinTouched pin {
  return (touch_isTouched (14 - pin))
}

to hyperduino_releaseEvent {
  return (touch_release_event)
}

to hyperduino_setAllPins bool {
  for pin (hyperduino_allPins) {
    digitalWriteOp pin bool
  }
}

to hyperduino_setMotorHyperduino motor power {
  comment 'Set motor (A or B) power (-100 to 100). The sign
of the power value determines motor direction.'
  comment 'Motor A: 3 & 4 (direction), 5 (power)
Motor B: 7 & 8 (direction), 6 (power)'
  if (motor == 'A') {
    local 'p1' 3
    local 'p2' 4
    local 'pwrPin' 5
  } (motor == 'B') {
    local 'p1' 7
    local 'p2' 8
    local 'pwrPin' 6
  } else {
    return 0
  }
  comment 'Set the motor direction based on sign of power'
  if (power > 0) {
    digitalWriteOp p1 false
    digitalWriteOp p2 true
  } (power < 0) {
    digitalWriteOp p1 true
    digitalWriteOp p2 false
  } else {
    digitalWriteOp p1 false
    digitalWriteOp p2 false
  }
  comment 'Set the PWM duty cycle on the power pin'
  analogWriteOp pwrPin (minimum (((absoluteValue power) * 1023) / 100) 1023)
}

to hyperduino_stopMotors {
  hyperduino_setMotorHyperduino 'A' 0
  hyperduino_setMotorHyperduino 'B' 0
}

to hyperduino_touchEvent {
  return (touch_touch_event)
}

