module 'Radio Primitives' Comm
author MicroBlocks
version 1 2 
tags radio communication messaging network 
description 'Low level BBC micro:bit radio primitives. You are probably looking for the Radio library in the folder above.

Messages to send and receive strings, numbers, and pairs use the same packet format as MakeCode and can be used to communicate with devices running MakeCode.

The packetSend/packetReceive primitives provide access to raw 32-byte radio packets so you can create your own protocol. The first byte gives the message length in bytes not counting the length byte; max is 31. The next byte is "1" for MakeCode packets; use anything but "1" for you own protocol and then it is up to you to define the format for the rest of the packet. See https://ukbaz.github.io/howto/ubit_radio.html.
'

	spec ' ' '[radio:sendInteger]' 'radio send number _' 'num' 123
	spec ' ' '[radio:sendString]' 'radio send string _' 'str' 'Hello!'
	spec ' ' '[radio:sendPair]' 'radio send pair _ = _' 'str num' 'light' 10
	spec 'r' '[radio:messageReceived]' 'radio message received?'
	spec 'r' '[radio:receivedInteger]' 'radio last number'
	spec 'r' '[radio:receivedString]' 'radio last string'
	spec 'r' '[radio:receivedMessageType]' 'radio last message type'
	spec ' ' '[radio:setGroup]' 'radio set group _ (0-255)' 'num' 0
	spec ' ' '[radio:setChannel]' 'radio set channel (0-83) _' 'num' 7
	spec ' ' '[radio:setPower]' 'radio set power (0-7) _' 'num' 4
	spec 'r' '[radio:signalStrength]' 'radio last signal strength'
	spec 'r' '[radio:packetReceive]' 'radio receive packet _' 'str'
	spec ' ' '[radio:packetSend]' 'radio send packet _' 'str'
	spec 'r' '[radio:deviceID]' 'radio my ID'
	spec 'r' '[radio:lastMessageID]' 'radio last sender ID'
	spec ' ' '[radio:disableRadio]' 'disable radio'
